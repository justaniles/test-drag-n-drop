{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["initialItems","i","push","App","listRef","useRef","useState","items","setItems","itemsRef","useEffect","current","listRefCurrent","Sortable","create","animation","onEnd","oldIndex","newIndex","console","log","movedItem","warn","itemToSwapWith","newItems","onAddItem","useCallback","length","className","ref","map","item","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAKA,I,gFADIA,EAAe,GACVC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAaE,KAAb,eAA0BD,IA0EbE,MAvEf,WACE,IAAMC,EAAUC,iBAAO,MADV,EAEaC,mBAASN,GAFtB,mBAENO,EAFM,KAECC,EAFD,KAIPC,EAAWJ,iBAAO,CACtBE,QACAC,aAEFE,qBAAU,WACRD,EAASE,QAAU,CACjBJ,QACAC,cAED,CAACD,EAAOC,IAEXE,qBAAU,WACR,IAAME,EAAiBR,EAAQO,QAC3BC,GACFC,IAASC,OAAOF,EAAgB,CAC9BG,UAAW,IACXC,MAAO,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAGlB,GAFAC,QAAQC,IAAR,qBAA0BH,EAA1B,wBAAkDC,IAE9CD,IAAaC,EAAU,OAEGT,EAASE,QAA7BJ,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,SACTa,EAAYd,EAAMU,GACxB,IAAKI,EAEH,YADAF,QAAQG,KAAK,kCAAmCL,GAIlD,IAAMM,EAAiBhB,EAAMW,GAC7B,IAAKK,EAEH,YADAJ,QAAQG,KAAK,iCAAkCJ,GAIjD,IAAMM,EAAQ,YAAOjB,GACrBiB,EAASP,GAAYM,EACrBC,EAASN,GAAYG,EAErBb,EAASgB,UAOnB,IAAMC,EAAYC,uBAAY,WAC5BlB,EAAS,GAAD,mBAAKD,GAAL,gBAAoBA,EAAMoB,aACjC,CAACpB,EAAOC,IAIX,OAFAW,QAAQC,IAAIb,GAGV,sBAAKqB,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAOC,IAAKzB,EAA1B,SACGG,EAAMuB,KAAI,SAACC,GAAD,OACT,oBAAIH,UAAU,YAAd,SACE,qBAAKA,UAAU,OAAf,SAAuBG,KADMA,QAKnC,qBAAKH,UAAU,SAAf,SACE,wBAAQI,QAASP,EAAjB,4BC9DOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.686aa3ef.chunk.js","sourcesContent":["import './App.css';\nimport Sortable from 'sortablejs';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nlet initialItems = [];\nfor (let i = 0; i < 5; i++) {\n  initialItems.push(`Item ${i}`);\n}\n\nfunction App() {\n  const listRef = useRef(null);\n  const [items, setItems] = useState(initialItems);\n\n  const itemsRef = useRef({\n    items,\n    setItems,\n  });\n  useEffect(() => {\n    itemsRef.current = {\n      items,\n      setItems,\n    };\n  }, [items, setItems]);\n\n  useEffect(() => {\n    const listRefCurrent = listRef.current;\n    if (listRefCurrent) {\n      Sortable.create(listRefCurrent, {\n        animation: 150,\n        onEnd: ({ oldIndex, newIndex }) => {\n          console.log(`Old index: ${oldIndex}, New index: ${newIndex}`);\n\n          if (oldIndex !== newIndex) {\n            // Update items order\n            const { items, setItems } = itemsRef.current;\n            const movedItem = items[oldIndex];\n            if (!movedItem) {\n              console.warn(\"Can't find moved item at index \", oldIndex);\n              return;\n            }\n\n            const itemToSwapWith = items[newIndex];\n            if (!itemToSwapWith) {\n              console.warn('Ended on out of bounds index: ', newIndex);\n              return;\n            }\n\n            const newItems = [...items];\n            newItems[oldIndex] = itemToSwapWith;\n            newItems[newIndex] = movedItem;\n\n            setItems(newItems);\n          }\n        },\n      });\n    }\n  });\n\n  const onAddItem = useCallback(() => {\n    setItems([...items, `Item ${items.length}`]);\n  }, [items, setItems]);\n\n  console.log(items);\n\n  return (\n    <div className=\"App\">\n      <ol className=\"list\" ref={listRef}>\n        {items.map((item) => (\n          <li className=\"list-item\" key={item}>\n            <div className=\"item\">{item}</div>\n          </li>\n        ))}\n      </ol>\n      <div className=\"footer\">\n        <button onClick={onAddItem}>Add item</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}