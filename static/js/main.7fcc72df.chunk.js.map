{"version":3,"sources":["components/SortableJsComponent.tsx","components/DraggableJsComponent.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["SortableJsComponent","items","onSortEnd","listRef","useRef","onSortEndRef","useEffect","current","listRefCurrent","sortable","Sortable","create","animation","onEnd","oldIndex","newIndex","callback","undefined","console","warn","destroy","className","ref","map","displayName","key","DraggableJsComponent","draggable","sortAnimation","duration","plugins","Plugins","SortAnimation","on","uniqueId","createItem","id","views","App","useState","currentView","setCurrentView","initialItems","i","push","setItems","useCallback","log","itemToMove","newItems","splice","onAddItem","onSwitchView","currentViewIndex","indexOf","length","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIaA,EAAqD,SAAC,GAGvC,IAF1BC,EAEyB,EAFzBA,MACAC,EACyB,EADzBA,UAEMC,EAAUC,iBAAO,MAGjBC,EAAeD,iBAAOF,GA+B5B,OA9BAI,qBAAU,WACRD,EAAaE,QAAUL,IACtB,CAACA,IAEJI,qBAAU,WACR,IAAME,EAAiBL,EAAQI,QAC/B,GAAIC,EAAgB,CAClB,IAAMC,EAAWC,IAASC,OAAOH,EAAgB,CAC/CI,UAAW,IACXC,MAAO,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACZC,EAAWX,EAAaE,QACzBS,QAAyBC,IAAbH,QAAuCG,IAAbF,EAO3CC,EAAS,CACPF,WACAC,aARAG,QAAQC,KAAR,iEAC4DH,EAD5D,uBACmFF,EADnF,uBAC0GC,OAWhH,OAAO,WACLN,EAASW,eAMb,oBAAIC,UAAU,OAAOC,IAAKnB,EAA1B,SACGF,EAAMsB,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,IAAhB,OACT,oBAAIJ,UAAU,YAAd,SACE,qBAAKA,UAAU,OAAf,SAAuBG,KADMC,S,OCzC1BC,EAAsD,SAAC,GAGxC,IAF1BzB,EAEyB,EAFzBA,MACAC,EACyB,EADzBA,UAEMC,EAAUC,iBAAyB,MAGnCC,EAAeD,iBAAOF,GAoC5B,OAnCAI,qBAAU,WACRD,EAAaE,QAAUL,IACtB,CAACA,IAEJI,qBAAU,WACR,IAAME,EAAiBL,EAAQI,QAC/B,GAAIC,EAAgB,CAClB,IAAMC,EAAW,IAAIC,WAASF,EAAgB,CAC5CmB,UAAW,aACXC,cAAe,CACbC,SAAU,KAEZC,QAAS,CAACC,UAAQC,iBAiBpB,OAfAvB,EAASwB,GACP,iBACA,YAAgD,IAA7CnB,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SACLC,EAAWX,EAAaE,QACzBS,EAKLA,EAAS,CACPF,WACAC,aANAG,QAAQC,KAAK,oCAUZ,WACLV,EAASW,cAGZ,IAGD,oBAAIC,UAAU,OAAOC,IAAKnB,EAA1B,SACGF,EAAMsB,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,IAAhB,OACT,oBAAIJ,UAAU,YAAd,SACE,qBAAKA,UAAU,OAAf,SAAuBG,KADMC,SC7CnCS,EAAW,EAEf,SAASC,IACP,IAAMC,EAAKF,IACX,MAAO,CACLT,IAAK,GAAKW,EACVZ,YAAY,QAAD,OAAUY,IAKzB,IAAMC,EAAiB,CAAC,aAAc,eA2EvBC,MAzEf,WAAgB,IAAD,EACyBC,mBACpCF,EAAM,IAFK,mBACNG,EADM,KACOC,EADP,OAIaF,oBAAkB,WAE1C,IADA,IAAMG,EAAwB,GACrBC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAaE,KAAKT,KAEpB,OAAOO,KATI,mBAINzC,EAJM,KAIC4C,EAJD,KAYP3C,EAAY4C,uBAChB,YAAyC,IAAtChC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAEX,GADAG,QAAQ6B,IAAR,qBAA0BjC,EAA1B,wBAAkDC,IAC9CD,IAAaC,EAAU,CAEzB,IAAMiC,EAAa/C,EAAMa,GACzB,IAAKkC,EAEH,YADA9B,QAAQC,KAAK,wCAAyCL,GAIxD,IAAMmC,EAAQ,YAAOhD,GACrBgD,EAASC,OAAOpC,EAAU,GAC1BmC,EAASC,OAAOnC,EAAU,EAAGiC,GAC7BH,EAASI,MAGb,CAAChD,EAAO4C,IAGJM,EAAYL,uBAAY,WAC5BD,EAAS,GAAD,mBAAK5C,GAAL,CAAYkC,SACnB,CAAClC,EAAO4C,IAELO,EAAeN,uBAAY,WAC/B,IAAMO,EAAmBhB,EAAMiB,QAAQd,GACvC,IAA0B,IAAtBa,EAKF,OAJAnC,QAAQC,KAAR,+BAC0BqB,EAD1B,sCAGAC,EAAeJ,EAAM,IAIvB,IAAMtB,GAAYsC,EAAmB,GAAKhB,EAAMkB,OAChDd,EAAeJ,EAAMtB,MACpB,CAACyB,IAIJ,OAFAtB,QAAQ6B,IAAI9C,GAGV,sBAAKoB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAAgCmB,IACf,eAAhBA,GACC,cAAC,EAAD,CAAqBvC,MAAOA,EAAOC,UAAWA,IAE/B,gBAAhBsC,GACC,cAAC,EAAD,CAAsBvC,MAAOA,EAAOC,UAAWA,IAEjD,sBAAKmB,UAAU,SAAf,UACE,wBAAQA,UAAU,gBAAgBmC,QAASJ,EAA3C,yBAGA,wBAAQ/B,UAAU,gBAAgBmC,QAASL,EAA3C,6BCvEOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fcc72df.chunk.js","sourcesContent":["import Sortable from 'sortablejs';\nimport React, { useEffect, useRef } from 'react';\nimport { ISortableListParams } from '../types';\n\nexport const SortableJsComponent: React.FC<ISortableListParams> = ({\n  items,\n  onSortEnd,\n}: ISortableListParams) => {\n  const listRef = useRef(null);\n\n  // Save ref for use with Sortable callback\n  const onSortEndRef = useRef(onSortEnd);\n  useEffect(() => {\n    onSortEndRef.current = onSortEnd;\n  }, [onSortEnd]);\n\n  useEffect(() => {\n    const listRefCurrent = listRef.current;\n    if (listRefCurrent) {\n      const sortable = Sortable.create(listRefCurrent, {\n        animation: 150,\n        onEnd: ({ oldIndex, newIndex }) => {\n          const callback = onSortEndRef.current;\n          if (!callback || oldIndex === undefined || newIndex === undefined) {\n            console.warn(\n              `Param undefined in Sortable.onEnd. callback defined: ${!!callback}, oldIndex: ${oldIndex}, newIndex: ${newIndex}`\n            );\n            return;\n          }\n\n          callback({\n            oldIndex,\n            newIndex,\n          });\n        },\n      });\n      return () => {\n        sortable.destroy();\n      };\n    }\n  });\n\n  return (\n    <ol className=\"list\" ref={listRef}>\n      {items.map(({ displayName, key }) => (\n        <li className=\"list-item\" key={key}>\n          <div className=\"item\">{displayName}</div>\n        </li>\n      ))}\n    </ol>\n  );\n};\n","import { Sortable, Plugins, SortableStopEvent } from '@shopify/draggable';\nimport React, { useEffect, useRef } from 'react';\nimport { ISortableListParams } from '../types';\n\nexport const DraggableJsComponent: React.FC<ISortableListParams> = ({\n  items,\n  onSortEnd,\n}: ISortableListParams) => {\n  const listRef = useRef<HTMLOListElement>(null);\n\n  // Save ref for use with Sortable callback\n  const onSortEndRef = useRef(onSortEnd);\n  useEffect(() => {\n    onSortEndRef.current = onSortEnd;\n  }, [onSortEnd]);\n\n  useEffect(() => {\n    const listRefCurrent = listRef.current;\n    if (listRefCurrent) {\n      const sortable = new Sortable(listRefCurrent, {\n        draggable: '.list-item',\n        sortAnimation: {\n          duration: 150,\n        },\n        plugins: [Plugins.SortAnimation],\n      });\n      sortable.on(\n        'sortable:stop',\n        ({ oldIndex, newIndex }: SortableStopEvent) => {\n          const callback = onSortEndRef.current;\n          if (!callback) {\n            console.warn('No onSortEnd callback defined');\n            return;\n          }\n\n          callback({\n            oldIndex,\n            newIndex,\n          });\n        }\n      );\n      return () => {\n        sortable.destroy();\n      };\n    }\n  }, []);\n\n  return (\n    <ol className=\"list\" ref={listRef}>\n      {items.map(({ displayName, key }) => (\n        <li className=\"list-item\" key={key}>\n          <div className=\"item\">{displayName}</div>\n        </li>\n      ))}\n    </ol>\n  );\n};\n","import './App.css';\nimport React, { useCallback, useState } from 'react';\nimport { SortableJsComponent, DraggableJsComponent } from './components';\nimport { IItem, ISortEvent } from './types';\n\nlet uniqueId = 0;\n\nfunction createItem(): IItem {\n  const id = uniqueId++;\n  return {\n    key: '' + id,\n    displayName: `Item ${id}`,\n  };\n}\n\ntype Views = 'SortableJS' | 'DraggableJS';\nconst views: Views[] = ['SortableJS', 'DraggableJS'];\n\nfunction App() {\n  const [currentView, setCurrentView] = useState<'SortableJS' | 'DraggableJS'>(\n    views[0]\n  );\n  const [items, setItems] = useState<IItem[]>(() => {\n    const initialItems: IItem[] = [];\n    for (let i = 0; i < 5; i++) {\n      initialItems.push(createItem());\n    }\n    return initialItems;\n  });\n\n  const onSortEnd = useCallback(\n    ({ oldIndex, newIndex }: ISortEvent) => {\n      console.log(`Old index: ${oldIndex}, New index: ${newIndex}`);\n      if (oldIndex !== newIndex) {\n        // Update items order\n        const itemToMove = items[oldIndex];\n        if (!itemToMove) {\n          console.warn(\"Can't find item to move at old index \", oldIndex);\n          return;\n        }\n\n        const newItems = [...items];\n        newItems.splice(oldIndex, 1);\n        newItems.splice(newIndex, 0, itemToMove);\n        setItems(newItems);\n      }\n    },\n    [items, setItems]\n  );\n\n  const onAddItem = useCallback(() => {\n    setItems([...items, createItem()]);\n  }, [items, setItems]);\n\n  const onSwitchView = useCallback(() => {\n    const currentViewIndex = views.indexOf(currentView);\n    if (currentViewIndex === -1) {\n      console.warn(\n        `Unknown currentView '${currentView}'. Defaulting to first view.`\n      );\n      setCurrentView(views[0]);\n      return;\n    }\n\n    const newIndex = (currentViewIndex + 1) % views.length;\n    setCurrentView(views[newIndex]);\n  }, [currentView]);\n\n  console.log(items);\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">{currentView}</header>\n      {currentView === 'SortableJS' && (\n        <SortableJsComponent items={items} onSortEnd={onSortEnd} />\n      )}\n      {currentView === 'DraggableJS' && (\n        <DraggableJsComponent items={items} onSortEnd={onSortEnd} />\n      )}\n      <div className=\"footer\">\n        <button className=\"footer-button\" onClick={onSwitchView}>\n          Switch view\n        </button>\n        <button className=\"footer-button\" onClick={onAddItem}>\n          Add item\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}